\input texinfo   @c -*-texinfo-*-
@c This is part of the Smalltalk YX Manual.
@c Copyright (C) 2008
@c   Luca Bruno <lethalman88@gmail.com>
@c See the file syx.texi for copying conditions.

@c %**start of header
@setfilename syx.info
@settitle Smalltalk YX Manual
@documentencoding UTF-8
@c %**end of header

@set VERSION 0.1.6
@set UPDATED Thu May, 1

@documentdescription
Smalltalk YX manual.
@end documentdescription

@copying
This manual is for Smalltalk YX (version @value{VERSION}, @value{UPDATED}).

Copyright @copyright{}  2008  Luca Bruno <lethalman88@@gmail.com>.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
Texts.  A copy of the license is included in the section entitled "GNU
Free Documentation License".
@end quotation
@end copying

@dircategory Software development
@direntry
* syx: (syx)Smalltalk YX Manual.
@end direntry

@titlepage
@title Smalltalk YX
@subtitle for version @value{VERSION}, @value{UPDATED}
@author by Luca Bruno (@email{lethalman88@@gmail.com})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top Smalltalk YX

Smalltalk YX is an open source programming language. It's an implementation of the Smalltalk-80 standard.
@end ifnottex

@menu
* What is Smalltalk::
* Why Smalltalk YX::
* Introducing the Syx environment::
* Introduction to the language::
* Smalltalk Reference::
* C Reference::
* Embedding::
* Advanced topics::
* Copying This Manual: GNU Free Documentation License
* Index::
@end menu

@setchapternewpage on

@node What is Smalltalk
@chapter What is Smalltalk 

@cindex Smalltalk, Pure objects

@uref{http://www.smalltalk.org, Smalltalk} is a dynamic object-oriented programming language.
With the name @strong{Smalltalk} we usually refer to the language standard (syntax, semantics, philosophy, etc.). You can think of Smalltalk-80 like the C99 standard.

Smalltalk was one of the first language @emph{to be invented to invent} the pure object system, where everything is an 'object'.

@acronym{ST, Smalltalk} is a powerful language which comes with a big environment for both users and developers. The syntax is elegant and its features are yet innovative.
It features a great reflection and introspection system which gave to the IDE what a real ``integrated development environment'' is for.

The way you develop Smalltalk applications is extremely clean and let you make your choice the right way, keeping your eyes between the internal logic and the final product. What you write in Smalltalk is really what you expect to get, with the highest coherence and quality of the whole collection of classes.

@node Why Smalltalk YX
@chapter Why Smalltalk YX

@cindex Syx purposes

@acronym{Syx, Smalltalk YX} is an @uref{http://opensource.org/, open source} implementation of the Smalltalk-80 standard, distributed under the terms of the MIT license.
@strong{Syx} is written in C has the following purposes:

@itemize @bullet
@item @strong{Readable code}

What we want is to let everybody read and @emph{understand} the code of Syx either without a specific knowledge of how languages work generally.

@item @strong{Flexibility trough easy creation of plugins}

Everybody can extend the lower layer of Syx with the creation of plugins, to interface Smalltalk with C/C++ and viceversa. The plugin system must be @emph{easy} and efficient.

@item @strong{Highly portable}

What we expect from this project is to be @emph{highly portable} to all platforms, or at least the most important platforms, with the same code, and to be as much flexible to be ported to any other platform currently unsupported.

@item @strong{Optimized}

Smalltalk is an expressive language, with a big collection of classes, code and self-documenting methods. @emph{Optimization} must be one of the most important keys for this project to accomplish the needs of many developers.

@item @strong{Modern}

The evolution of computing brings to us new technologies everyday of which @emph{Syx will be updated} to be one of the first choices for developers to look for.

@item @strong{Embeddable in C applications}

Embedding Smalltalk in C applications with an @emph{easy-to-use API} must be in the interest of any developer that wants a good object-oriented language for scripting in his applications.

@item @strong{Easy to use, powerful and well-structured environment}

The whole environment is the base of all the good things that come up with Syx. It must be always improved and made to be even more friendly.

@item @strong{Small}

The final Syx product must be both powerful and @emph{small}, in order to be adopted also in embedded devices.

@end itemize

@node Introducing the Syx environment
@chapter Introducing the Syx environment

@cindex Command line, Startup
@pindex syx

Syx has two kind of environments for both launching and developing your applications.
The first, less intuitive but useful for small scripts and immediate tests, is the command line interpreter.
The name of the program is @command{syx}. Once you run it you will get into a console like this:

@example
Smalltalk YX @value{VERSION} is ready.
Type "help!" to get help.
>
@end example

When you see the @code{>} character at the beginnig, it means the previous command has been executed then the program is ready to interpret your next commands ``on the fly''.
To get a first approach to the environment, type @kbd{help!} and press @key{Enter} to get a basic list of available commands that might help you. This would be the result on your screen:

@example
> help!
'===========
To quit Smalltalk YX type "Smalltalk quit!" or press ^D (ctrl+D).
To say Hello World type:
 'Hello world'!

For more documentation and examples please visit the homepage or contact us.

Homepage: http://syx.googlecode.com
Mailing list: http://groups.google.com/group/syx-discuss
IRC channel: #syx on irc.freenode.net
E-mail: lethalman88 at gmail.com
==========='
>
@end example

@node Introduction to the language
@chapter Introduction to the language

@node Smalltalk Reference
@chapter Smalltalk Reference

@node C Reference
@chapter C Reference

@node Embedding
@chapter Embedding

@node Advanced topics
@chapter Advanced topics

@node GNU Free Documentation License
@appendix GNU Free Documentation License

@include fdl-1.2.texi


@node Index
@unnumbered Index

@menu
* Programs::
* Concepts::
@end menu

@node Programs
@section Programs

@printindex pg

@node Concepts
@section Concepts

@printindex cp

@bye
