2007-06-04  Luca Bruno  <lethalman88@gmail.com>

	* configure.ac: removed -pedantic since we use bitfields that are a GCC extension
	* Everything has been refactored using SyxOop instead of working on raw pointers. This can be slower but allows all platforms (32bit or 64bit) to access the memory by indexes

	* syx-interp.c (syx_interp_leave_context_and_answer): removed an argument because the return context has been inserted into method contexts
	* syx-interp.c (syx_interp_send_message): fixed message arguments array creation
	* syx-object.c (syx_byte_array_*): added
	* syx-object.c (syx_*_context_new): copy arguments to the context arguments stack
	* syx-object.h (SYX_METHOD_CONTEXT_RETURN_CONTEXT): moved from block contexts for speed matters
	* syx-object.h (SYX_BLOCK_ARGUMENTS_TOP): holds the index to the arguments stack
	* syx-object.h (SYX_PROCESSOR_SCHEDULER_*): old mistake SYX_PROCESS_SCHEDULER
	* syx-primitives.c (SmallInteger_*): bug fix
	* syx-parser.c (_syx_parser_parse_block): now operate on the same parser instead of creating a new one, to share arguments and temporaries
	* syx-parser.c (syx_parser_new): removed last two arguments, not needed anymore because of shared scopes
	* syx-parser.c (syx_parser_parse): store bytecodes as a ByteArray
	* syx-parser.c (_syx_parser_find_*): return -1 instead of 0 since syx_varsize now is not unsigned anymore
	* syx-parser.h (SyxParserScope, SyxParserScopeStack): added to share arguments and temporaries between methods and nested blocks
	* syx-memory.c (syx_memory_alloc): call syx_memory_gc once the heap is full
	* syx-types.h (SYX_IS_POINTER): fixed
	* syx-init.c (syx_build_basic): added syx_byte_array_class

2007-06-03  Luca Bruno  <lethalman88@gmail.com>

	* syx-memory.c (syx_memory_gc): added a basic implementation of a mark and sweep garbage collector
	* syx-memory.c (syx_memory_get_heap): added function
	* syx-memory.c (syx_memory_get_heap_size): added function
	* syx-utils.c (syx_path_join): removed

	* syx-object.c (SyxObject): added is_static, has_refs and is_marked bitfields to use for garbage collection with relative macro accesses
	* syx-types.h (syx_varsize): small integers can hold only signed ints
	* syx-memory.c (syx_memory_get_heap): added function
	* syx-memory.c (syx_memory_free): added function
	* syx-utils.c (syx_path_join): fixed possible memory leaks
	Calls to syx_object_new* have been fixed

	* Added a TODO file
	* syx-utils.c (syx_path_join): some stylistic fixes

	* Added Doxygen documentation

	* syx-types.h: defining TRUE and FALSE booleans when not defined (e.g. when not including glib.h)
	* syx-types.h (SYX_SMALL_INTEGER): use double shifting instead of AND/INVERT
	* syx-object.c (syx_class_lookup_method): added function and removed the issued macro
	* syx-utils.c: removed GError when not needed
	* syx-init.c: removed unused GHashTable
	* syx-interp.c (syx_exec_state_free): added inline function
	* syx-interp.c (syx_exec_state_save): fixed saving the execution state of a process
	* Removed all G_BEGIN_DECLS / G_END_DECLS to make use of Doxygen

2007-06-01  Luca Bruno  <lethalman88@gmail.com>

	* configure.ac: override standard CFLAGS
	* syx-object.c (syx_dictionary_at_symbol_put): return once we found the right place to put the data
	* syx-object.c (syx_metaclass_new, syx_class_new): avoid nil values to speed up lookups
	* syx-object.c (syx_symbol_new): put the symbol itself instead of SYX_TRUE
	* syx-enums.h (SyxTokenType): put string-based token types at the end so that syx_token_free can free strings
	* syx-lexer.h: Added SyxToken structure to get rid of GValue
	* syx-lexer.c: removed GValue dependency and Glib ascii functions usage
	Renamed all static functions
	All parts of Syx have been updated with the new behavior of the lexer, including the parser and the tests
	* syx-lexer.c (syx_lexer_free): added function
	* syx-lexer.c (syx_token_free): added function
	* syx-bytecode.c (syx_bytecode_free): added function
	* syx-parser.c (syx_parser_free): added function
	Renamed all static functions.
	* syx-utils.c: completely refactored without using Glib
	* syx-utils.h: removed G_VALUE_STRCMP
	* Replaced all g_strcasecmp and g_strdup with strcmp and strdup
	* syx-init.c (syx_init): removed g_type_init, we do not need GObject for GValue anymore
	* st/kernel/initialDecl.st: fixed instance variables according to syx-enums.h
	* syx-memory.c (syx_freev): new function to free NULL terminated arrays
	* syx-memory.c (_syx_memory): moved from static to dynamic
	* syx-memory.c (syx_memory_free): removed because of future garbage collector
	* syx-memory.h (SyxMemoryLink): removed with syx_memory_free
	* syx-types.h (syx_small_integer_new, syx_character_new): be sure we work on a long before doing bitwise operations
	* syx-types.h (syx_char): added type
	* syx-types.h (syx_size): changed from unsigned long to long according to standard size_t
	Removed lots of Glib memory related dependencies.
	Recovered a bunch of memory leaks
