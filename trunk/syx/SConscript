import os
Import ('env')

libenv = env.Clone ()

if libenv['PLATFORM'] == 'win32':
    libenv.MergeFlags ('-DBUILD_DLL')

# Build the shared library

lib_objects = libenv.SharedObject (Split ("""
	    syx-bytecode.c syx-init.c syx-interp.c
	    syx-lexer.c syx-memory.c syx-object.c syx-parser.c
	    syx-primitives.c syx-scheduler.c syx-utils.c syx-error.c
            syx-plugins.c
	    """))
lib_shared = libenv.SharedLibrary (target='syx', source=lib_objects)
Default (lib_shared)

env.Install (env['libdir'], lib_shared)
env.Alias ('install', env['libdir'])

# Install includes

includes = ['syx.h', 'syx-interp.h', 'syx-bytecode.h', 'syx-enums.h', 'syx-error.h',
            'syx-lexer.h', 'syx-memory.h', 'syx-object.h', 'syx-init.h',
            'syx-parser.h', 'syx-platform.h', 'syx-scheduler.h', 'syx-utils.h',
            'syx-types.h', 'syx-plugins.h']
incdir = os.path.join (env['includedir'], 'syx')
env.Install (incdir, includes)
env.Alias ('install', incdir)
